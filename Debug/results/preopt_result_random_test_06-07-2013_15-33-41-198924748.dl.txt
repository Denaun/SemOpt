Debug on.
Input file: ./test-input/random_test_06-07-2013_15-33-41-198924748.dl
Entering pref
AF initialized. Showing structure
Argument a1	attacks a12, a13
		attacked by a13
Argument a10	attacks a4
		attacked by a3, a5
Argument a11	attacks a9
		attacked by a12, a14, a2
Argument a12	attacks a11, a13
		attacked by a1, a9
Argument a13	attacks a1
		attacked by a1, a12, a5, a6, a8
Argument a14	attacks a11, a7
		attacked by a2, a9
Argument a2	attacks a11, a14, a3
		attacked by a6, a8
Argument a3	attacks a10
		attacked by a2
Argument a4	attacks a5, a8
		attacked by a10, a8
Argument a5	attacks a10, a13
		attacked by a4
Argument a6	attacks a13, a2
		attacked by none
Argument a7	attacks a8
		attacked by a14, a8, a9
Argument a8	attacks a13, a2, a4, a7
		attacked by a4, a7, a9
Argument a9	attacks a12, a14, a7, a8
		attacked by a11

Entering Grounded
	New cycle
		Added a6
	New cycle
		Added a1
		Added a3
	New cycle
		No grounded extension found.
		Final I: {a11 a14 a4 a5 a7 a8 a9}
e: {a1 a3 a6}
I: {a11 a14 a4 a5 a7 a8 a9}
	First Labelling: {a1 a3 a6}
	New AF ( restricted ):
Argument a11	attacks a9
		attacked by a14
Argument a14	attacks a11, a7
		attacked by a9
Argument a4	attacks a5, a8
		attacked by a8
Argument a5	attacks none
		attacked by a4
Argument a7	attacks a8
		attacked by a14, a8, a9
Argument a8	attacks a4, a7
		attacked by a4, a7, a9
Argument a9	attacks a14, a7, a8
		attacked by a11

Initializing DFSAF structure
	DFSAF structure initialized
Entering SCCSSEQ.
	Calling TarjanAlg for a11
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a9
		Looking at a9
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a14
		Looking at a14
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a11
		Looking at a11
		Searching in stack for a11
			Node in stack: a14
			Node in stack: a9
			Node in stack: a11
			Found in stack.
		a14's lowlink: 0
		Searching DFSNode corresponding to Argument a7
		Looking at a7
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a8
		Looking at a8
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a4
		Looking at a4
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a5
		Looking at a5
			Not yet visited. Recurring
	Entering TarjanAlg.
	--- Building SCC ---
	Finished TarjanAlg on node a5
		a4's lowlink: 5
		Searching DFSNode corresponding to Argument a8
		Looking at a8
		Searching in stack for a8
			Node in stack: a4
			Node in stack: a8
			Found in stack.
		a4's lowlink: 4
	Finished TarjanAlg on node a4
		a8's lowlink: 4
		Searching DFSNode corresponding to Argument a7
		Looking at a7
		Searching in stack for a7
			Node in stack: a4
			Node in stack: a8
			Node in stack: a7
			Found in stack.
		a8's lowlink: 3
	Finished TarjanAlg on node a8
		a7's lowlink: 3
	--- Building SCC ---
	Finished TarjanAlg on node a7
		a14's lowlink: 0
	Finished TarjanAlg on node a14
		a9's lowlink: 0
		Searching DFSNode corresponding to Argument a7
		Looking at a7
		Searching in stack for a7
			Node in stack: a14
			Node in stack: a9
			Node in stack: a11
			Not found in stack.
		a9's lowlink: 0
		Searching DFSNode corresponding to Argument a8
		Looking at a8
		Searching in stack for a8
			Node in stack: a14
			Node in stack: a9
			Node in stack: a11
			Not found in stack.
		a9's lowlink: 0
	Finished TarjanAlg on node a9
		a11's lowlink: 0
	--- Building SCC ---
	Finished TarjanAlg on node a11
	SCC: {a11 a14 a9}
	SCC: {a4 a7 a8}
	SCC: {a5}
Entering boundcond
	Determined O: {}
	Determining I from: {a11 a14 a9}
		Nodes not satisfying the first condition: {}
	Determined I: {a11 a14 a9}
O: {}
I: {a11 a14 a9}
	Calling prefSAT.
Set arguments: 
{a11 a14 a9}
C set:
{a11 a14 a9}
predecessors of a11: a14 
predecessors of a14: a9 
predecessors of a9: a11 
Preparing the satsolver
1 4 7 0
-1 -4 0
-1 -7 0
-4 -7 0
-1 5 0
-7 -2 0
-5 1 0
-7 8 0
2 -8 7 0
2 5 8 0
-2 -5 0
-2 -8 0
-5 -8 0
-2 6 0
-8 -3 0
-6 2 0
-8 9 0
3 -9 8 0
3 6 9 0
-3 -6 0
-3 -9 0
-6 -9 0
-3 4 0
-9 -1 0
-4 3 0
-9 7 0
1 -7 9 0
-2 4 0
-4 2 0
-3 5 0
-5 3 0
-1 6 0
-6 1 0
1 2 3 020
		Found {}
			Created: {a1 a3 a6}
Entering boundcond
	Determined O: {}
	Determining I from: {a4 a7 a8}
		Nodes not satisfying the first condition: {a7 a8}
		Not every attacker of a7 is attacked by e.
		Not every attacker of a8 is attacked by e.
	Determined I: {a4}
O: {}
I: {a4}
	Calling prefSAT.
Subtraction a7
Subtraction a8
Set arguments: 
{a4 a7 a8}
C set:
{a4}
predecessors of a4: a8 
Preparing the satsolver
-2 0
5 8 0
-5 -8 0
-3 0
6 9 0
-6 -9 0
1 4 7 0
-1 -4 0
-1 -7 0
-4 -7 0
-1 6 0
-7 -3 0
-6 1 0
-7 9 0
3 -9 7 0
-3 4 0
-4 3 0
-3 5 0
-5 3 0
-1 6 0
-2 6 0
-6 1 2 0
1 010a4
in 1
out 1
undec 1

{a4 }
Preparing the satsolver
-2 0
5 8 0
-5 -8 0
-3 0
6 9 0
-6 -9 0
1 4 7 0
-1 -4 0
-1 -7 0
-4 -7 0
-1 6 0
-7 -3 0
-6 1 0
-7 9 0
3 -9 7 0
-3 4 0
-4 3 0
-3 5 0
-5 3 0
-1 6 0
-2 6 0
-6 1 2 0
1 0
20
		Found {a4}
			Created: {a1 a3 a4 a6}
Entering boundcond
	Determined O: {}
	Determining I from: {a5}
		Nodes not satisfying the first condition: {a5}
		a5 attacked by e.
	Determined I: {}
O: {}
I: {}
	Calling prefSAT.
Subtraction a5
Set arguments: 
{a5}
C set:
{}
Preparing the satsolver
-1 0
2 3 0
-2 -3 0
20
		Found {}
			Created: {a1 a3 a4 a6}
Extension 1
{a1 a3 a4 a6}
