Debug on.
Input file: ./test-input/random_test_06-07-2013_15-33-41-290763963.dl
Entering pref
AF initialized. Showing structure
Argument a1	attacks a10, a5, a8
		attacked by none
Argument a10	attacks a9
		attacked by a1, a5
Argument a2	attacks a3, a6, a7, a8, a9
		attacked by a4, a5, a7
Argument a3	attacks a4, a5
		attacked by a2, a6, a8
Argument a4	attacks a2
		attacked by a3
Argument a5	attacks a10, a2, a7
		attacked by a1, a3, a6
Argument a6	attacks a3, a5, a8
		attacked by a2, a8
Argument a7	attacks a2
		attacked by a2, a5
Argument a8	attacks a3, a6, a9
		attacked by a1, a2, a6
Argument a9	attacks none
		attacked by a10, a2, a8

Entering Grounded
	New cycle
		Added a1
	New cycle
		No grounded extension found.
		Final I: {a2 a3 a4 a6 a7 a9}
	e: {a1}
	I: {a2 a3 a4 a6 a7 a9}
	First Labelling: {a1}
	New AF ( restricted ):
Argument a2	attacks a3, a6, a7, a9
		attacked by a4, a7
Argument a3	attacks a4
		attacked by a2, a6
Argument a4	attacks a2
		attacked by a3
Argument a6	attacks a3
		attacked by a2
Argument a7	attacks a2
		attacked by a2
Argument a9	attacks none
		attacked by a2

Initializing DFSAF structure
	DFSAF structure initialized
Entering SCCSSEQ.
	Calling TarjanAlg for a2
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a3
		Looking at a3
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a4
		Looking at a4
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a2
		Looking at a2
		Searching in stack for a2
			Node in stack: a4
			Node in stack: a3
			Node in stack: a2
			Found in stack.
		a4's lowlink: 0
	Finished TarjanAlg on node a4
		a3's lowlink: 0
	Finished TarjanAlg on node a3
		a2's lowlink: 0
		Searching DFSNode corresponding to Argument a6
		Looking at a6
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a3
		Looking at a3
		Searching in stack for a3
			Node in stack: a6
			Node in stack: a4
			Node in stack: a3
			Found in stack.
		a6's lowlink: 0
	Finished TarjanAlg on node a6
		a2's lowlink: 0
		Searching DFSNode corresponding to Argument a7
		Looking at a7
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a2
		Looking at a2
		Searching in stack for a2
			Node in stack: a7
			Node in stack: a6
			Node in stack: a4
			Node in stack: a3
			Node in stack: a2
			Found in stack.
		a7's lowlink: 0
	Finished TarjanAlg on node a7
		a2's lowlink: 0
		Searching DFSNode corresponding to Argument a9
		Looking at a9
			Not yet visited. Recurring
	Entering TarjanAlg.
	--- Building SCC ---
	Finished TarjanAlg on node a9
		a2's lowlink: 0
	--- Building SCC ---
	Finished TarjanAlg on node a2
	SCC: {a2 a3 a4 a6 a7}
	SCC: {a9}
Entering boundcond
	Determined O: {}
	Determining I from: {a2 a3 a4 a6 a7}
		Nodes not satisfying the first condition: {}
	Determined I: {a2 a3 a4 a6 a7}
O: {}
I: {a2 a3 a4 a6 a7}
	Going to call prefSAT.
		Calling prefSAT.
Set arguments: 
{a2 a3 a4 a6 a7}
C set:
{a2 a3 a4 a6 a7}
predecessors of a2: a4 a7 
predecessors of a3: a2 a6 
predecessors of a4: a3 
predecessors of a6: a2 
predecessors of a7: a2 
Preparing the satsolver
1 6 11 0
-1 -6 0
-1 -11 0
-6 -11 0
-1 8 0
-11 -3 0
-1 10 0
-11 -5 0
-8 -10 1 0
-11 13 15 0
3 5 -13 11 0
3 5 -15 11 0
2 7 12 0
-2 -7 0
-2 -12 0
-7 -12 0
-2 6 0
-12 -1 0
-2 9 0
-12 -4 0
-6 -9 2 0
-12 11 14 0
1 4 -11 12 0
1 4 -14 12 0
3 8 13 0
-3 -8 0
-3 -13 0
-8 -13 0
-3 7 0
-13 -2 0
-7 3 0
-13 12 0
2 -12 13 0
4 9 14 0
-4 -9 0
-4 -14 0
-9 -14 0
-4 6 0
-14 -1 0
-6 4 0
-14 11 0
1 -11 14 0
5 10 15 0
-5 -10 0
-5 -15 0
-10 -15 0
-5 6 0
-15 -1 0
-6 5 0
-15 11 0
1 -11 15 0
-3 6 0
-5 6 0
-6 3 5 0
-1 7 0
-4 7 0
-7 1 4 0
-2 8 0
-8 2 0
-1 9 0
-9 1 0
-1 10 0
-10 1 0
1 2 3 4 5 010a4
a6
a7
in 3
out 2
undec 0

{a4 a6 a7 }
Preparing the satsolver
1 6 11 0
-1 -6 0
-1 -11 0
-6 -11 0
-1 8 0
-11 -3 0
-1 10 0
-11 -5 0
-8 -10 1 0
-11 13 15 0
3 5 -13 11 0
3 5 -15 11 0
2 7 12 0
-2 -7 0
-2 -12 0
-7 -12 0
-2 6 0
-12 -1 0
-2 9 0
-12 -4 0
-6 -9 2 0
-12 11 14 0
1 4 -11 12 0
1 4 -14 12 0
3 8 13 0
-3 -8 0
-3 -13 0
-8 -13 0
-3 7 0
-13 -2 0
-7 3 0
-13 12 0
2 -12 13 0
4 9 14 0
-4 -9 0
-4 -14 0
-9 -14 0
-4 6 0
-14 -1 0
-6 4 0
-14 11 0
1 -11 14 0
5 10 15 0
-5 -10 0
-5 -15 0
-10 -15 0
-5 6 0
-15 -1 0
-6 5 0
-15 11 0
1 -11 15 0
-3 6 0
-5 6 0
-6 3 5 0
-1 7 0
-4 7 0
-7 1 4 0
-2 8 0
-8 2 0
-1 9 0
-9 1 0
-1 10 0
-10 1 0
1 2 3 4 5 0
3 0
4 0
5 0
1 2 020Preparing the satsolver
1 6 11 0
-1 -6 0
-1 -11 0
-6 -11 0
-1 8 0
-11 -3 0
-1 10 0
-11 -5 0
-8 -10 1 0
-11 13 15 0
3 5 -13 11 0
3 5 -15 11 0
2 7 12 0
-2 -7 0
-2 -12 0
-7 -12 0
-2 6 0
-12 -1 0
-2 9 0
-12 -4 0
-6 -9 2 0
-12 11 14 0
1 4 -11 12 0
1 4 -14 12 0
3 8 13 0
-3 -8 0
-3 -13 0
-8 -13 0
-3 7 0
-13 -2 0
-7 3 0
-13 12 0
2 -12 13 0
4 9 14 0
-4 -9 0
-4 -14 0
-9 -14 0
-4 6 0
-14 -1 0
-6 4 0
-14 11 0
1 -11 14 0
5 10 15 0
-5 -10 0
-5 -15 0
-10 -15 0
-5 6 0
-15 -1 0
-6 5 0
-15 11 0
1 -11 15 0
-3 6 0
-5 6 0
-6 3 5 0
-1 7 0
-4 7 0
-7 1 4 0
-2 8 0
-8 2 0
-1 9 0
-9 1 0
-1 10 0
-10 1 0
1 2 3 4 5 0
1 2 020
		Found {a4 a6 a7}
			Created: {a1 a4 a6 a7}
Entering boundcond
	Determined O: {}
	Determining I from: {a9}
		Nodes not satisfying the first condition: {a9}
		a9's attackers are attacked by e.
	Determined I: {a9}
O: {}
I: {a9}
	Going to call prefSAT.
		No need to call prefSAT.

		Found {a9}
			Created: {a1 a4 a6 a7 a9}
Extension 1
{a1 a4 a6 a7 a9}
