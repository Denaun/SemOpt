Debug on.
Input file: ./test-input/random_test_06-07-2013_15-33-41-212982546.dl
Entering pref
AF initialized. Showing structure
Argument a1	attacks a10, a14, a7
		attacked by a11, a8
Argument a10	attacks a13
		attacked by a1, a11, a3
Argument a11	attacks a1, a10, a8
		attacked by a14
Argument a12	attacks a13
		attacked by none
Argument a13	attacks a14
		attacked by a10, a12, a5, a7, a9
Argument a14	attacks a11, a4, a8
		attacked by a1, a13, a9
Argument a2	attacks a3, a4, a9
		attacked by none
Argument a3	attacks a10, a4
		attacked by a2
Argument a4	attacks none
		attacked by a14, a2, a3, a6, a7
Argument a5	attacks a13
		attacked by none
Argument a6	attacks a4
		attacked by none
Argument a7	attacks a13, a4
		attacked by a1, a8
Argument a8	attacks a1, a7
		attacked by a11, a14
Argument a9	attacks a13, a14
		attacked by a2

Entering Grounded
	New cycle
		Added a12
		Added a2
		Added a5
		Added a6
	New cycle
		No grounded extension found.
		Final I: {a1 a10 a11 a14 a7 a8}
e: {a12 a2 a5 a6}
I: {a1 a10 a11 a14 a7 a8}
	First Labelling: {a12 a2 a5 a6}
	New AF ( restricted ):
Argument a1	attacks a10, a14, a7
		attacked by a11, a8
Argument a10	attacks none
		attacked by a1, a11
Argument a11	attacks a1, a10, a8
		attacked by a14
Argument a14	attacks a11, a8
		attacked by a1
Argument a7	attacks none
		attacked by a1, a8
Argument a8	attacks a1, a7
		attacked by a11, a14

Initializing DFSAF structure
	DFSAF structure initialized
Entering SCCSSEQ.
	Calling TarjanAlg for a1
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a10
		Looking at a10
			Not yet visited. Recurring
	Entering TarjanAlg.
	--- Building SCC ---
	Finished TarjanAlg on node a10
		a1's lowlink: 0
		Searching DFSNode corresponding to Argument a14
		Looking at a14
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a11
		Looking at a11
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a1
		Looking at a1
		Searching in stack for a1
			Node in stack: a11
			Node in stack: a14
			Node in stack: a1
			Found in stack.
		a11's lowlink: 0
		Searching DFSNode corresponding to Argument a10
		Looking at a10
		Searching in stack for a10
			Node in stack: a11
			Node in stack: a14
			Node in stack: a1
			Not found in stack.
		a11's lowlink: 0
		Searching DFSNode corresponding to Argument a8
		Looking at a8
			Not yet visited. Recurring
	Entering TarjanAlg.
		Searching DFSNode corresponding to Argument a1
		Looking at a1
		Searching in stack for a1
			Node in stack: a8
			Node in stack: a11
			Node in stack: a14
			Node in stack: a1
			Found in stack.
		a8's lowlink: 0
		Searching DFSNode corresponding to Argument a7
		Looking at a7
			Not yet visited. Recurring
	Entering TarjanAlg.
	--- Building SCC ---
	Finished TarjanAlg on node a7
		a8's lowlink: 0
	Finished TarjanAlg on node a8
		a11's lowlink: 0
	Finished TarjanAlg on node a11
		a14's lowlink: 0
		Searching DFSNode corresponding to Argument a8
		Looking at a8
		Searching in stack for a8
			Node in stack: a8
			Found in stack.
		a14's lowlink: 0
	Finished TarjanAlg on node a14
		a1's lowlink: 0
		Searching DFSNode corresponding to Argument a7
		Looking at a7
		Searching in stack for a7
			Node in stack: a8
			Node in stack: a11
			Node in stack: a14
			Node in stack: a1
			Not found in stack.
		a1's lowlink: 0
	--- Building SCC ---
	Finished TarjanAlg on node a1
	SCC: {a1 a11 a14 a8}
	SCC: {a7}
	SCC: {a10}
Entering boundcond
	Determined O: {}
	Determining I from: {a1 a11 a14 a8}
		Nodes not satisfying the first condition: {}
	Determined I: {a1 a11 a14 a8}
O: {}
I: {a1 a11 a14 a8}
	Calling prefSAT.
Set arguments: 
{a1 a11 a14 a8}
C set:
{a1 a11 a14 a8}
predecessors of a1: a11 a8 
predecessors of a11: a14 
predecessors of a14: a1 
predecessors of a8: a11 a14 
Preparing the satsolver
1 5 9 0
-1 -5 0
-1 -9 0
-5 -9 0
-1 6 0
-9 -2 0
-1 8 0
-9 -4 0
-6 -8 1 0
-9 10 12 0
2 4 -10 9 0
2 4 -12 9 0
2 6 10 0
-2 -6 0
-2 -10 0
-6 -10 0
-2 7 0
-10 -3 0
-7 2 0
-10 11 0
3 -11 10 0
3 7 11 0
-3 -7 0
-3 -11 0
-7 -11 0
-3 5 0
-11 -1 0
-5 3 0
-11 9 0
1 -9 11 0
4 8 12 0
-4 -8 0
-4 -12 0
-8 -12 0
-4 6 0
-12 -2 0
-4 7 0
-12 -3 0
-6 -7 4 0
-12 10 11 0
2 3 -10 12 0
2 3 -11 12 0
-2 5 0
-4 5 0
-5 2 4 0
-3 6 0
-6 3 0
-1 7 0
-7 1 0
-2 8 0
-3 8 0
-8 2 3 0
1 2 3 4 020
		Found {}
			Created: {a12 a2 a5 a6}
Entering boundcond
	Determined O: {}
	Determining I from: {a7}
		Nodes not satisfying the first condition: {a7}
		Not every attacker of a7 is attacked by e.
	Determined I: {}
O: {}
I: {}
	Calling prefSAT.
Subtraction a7
Set arguments: 
{a7}
C set:
{}
Preparing the satsolver
-1 0
2 3 0
-2 -3 0
20
		Found {}
			Created: {a12 a2 a5 a6}
Entering boundcond
	Determined O: {}
	Determining I from: {a10}
		Nodes not satisfying the first condition: {a10}
		Not every attacker of a10 is attacked by e.
	Determined I: {}
O: {}
I: {}
	Calling prefSAT.
Subtraction a10
Set arguments: 
{a10}
C set:
{}
Preparing the satsolver
-1 0
2 3 0
-2 -3 0
20
		Found {}
			Created: {a12 a2 a5 a6}
Extension 1
{a12 a2 a5 a6}
